from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
from tensorflow.keras import utils
from tensorflow.keras.preprocessing import image
import numpy as np
import pylab
from mpl_toolkits.mplot3d import Axes3D
from google.colab import files
import matplotlib.pyplot as plt
from PIL import Image
%matplotlib inline

img_path = 'photo2021.jpg'
img = image.load_img(img_path, target_size=(28, 28), color_mode = "grayscale")
x = image.img_to_array(img)

x = x.astype('float32')
x = x / 255
x = x.reshape(1, 784)
print(x.shape)

y=5
y_test=np.array(5)
y=utils.to_categorical(y_test, 10)
print(y_test)
print(y)

(x_train_org, y_train_org), (x_test_org, y_test_org) = mnist.load_data()
x_train = x_train_org.reshape(60000, 784)
x_train = x_train.astype('float32')
x_train = x_train / 255
y_train = utils.to_categorical(y_train_org, 10)

model = Sequential()
model.add(Dense(800, input_dim=784, activation="relu"))
model.add(Dense(400, activation="relu"))
model.add(Dense(10, activation="softmax"))

model.compile(loss="categorical_crossentropy", optimizer="adam", metrics=["accuracy"])

model.fit(x_train, y_train, batch_size=128, epochs=15, verbose=1)

prediction = model.predict(x)
print(prediction)

sum(prediction[0])

pred = np.argmax(prediction)
print(pred)

print(y_test)
